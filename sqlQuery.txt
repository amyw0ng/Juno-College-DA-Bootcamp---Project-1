--Query to determine 30-day rolling retention:

WITH player_info_retention_stat AS (
    SELECT 
        DISTINCT p.player_id,
        p.joined,
        IF(MAX(day) OVER (PARTITION BY p.player_id) >= joined+30, 1, 0) AS retention_status,
    FROM `juno-da-bootcamp-project-1.raw_data.player_info` AS p
    LEFT JOIN `juno-da-bootcamp-project-1.raw_data.matches_info` AS m
    ON p.player_id = m.player_id)

SELECT 
    *,
    CASE 
        WHEN LAG(fractional_retention) OVER (ORDER BY join_day) > 0 THEN
        (fractional_retention - LAG(fractional_retention) OVER (ORDER BY join_day)) / LAG(fractional_retention) OVER (ORDER BY join_day)
        WHEN join_day = 1 THEN 0
        ELSE 0
        END AS growth_rate
FROM (    
    SELECT 
        joined AS join_day,
        COUNT(joined) AS total_joined,
        SUM(retention_status) AS total_retained,
        ROUND(SUM(retention_status)/COUNT(joined),4) AS fractional_retention
    FROM player_info_retention_stat AS pr
    GROUP BY joined
    ORDER BY joined)
ORDER BY join_day




--Query to determine highest win-streak per player within the first 30 days of them joining game

WITH new_streaks AS (
    SELECT
      player_id,
      day,
      outcome,
      CASE 
            WHEN
            outcome = 'win' AND
            LAG(outcome) OVER (PARTITION BY player_id ORDER BY day) = 'loss' 
                THEN 1 
            WHEN 
            outcome = 'win' AND
            LAG(outcome) OVER (PARTITION BY player_id ORDER BY day) IS NULL
                THEN 1
            ELSE 0 
        END AS new_streak
    FROM (
        SELECT 
            m.player_id,
            m.outcome,
            m.day
        FROM `juno-da-bootcamp-project-1.raw_data.matches_info` m
        JOIN `juno-da-bootcamp-project-1.raw_data.player_info` p
        ON m.player_id = p.player_id
        WHERE 
            m.day <= p.joined+30)),

    streak_no_table AS (
    SELECT
        player_id,
        day,
        SUM(new_streak) OVER (PARTITION BY player_id ORDER BY day) streak_no
    FROM new_streaks 
    WHERE
        outcome = 'win'),

    records_per_streak AS (
    SELECT
        player_id,
        streak_no,
        COUNT(*) AS counter
    FROM streak_no_table
    GROUP BY
        player_id,
        streak_no),

    total_games_info AS (
    SELECT 
        m.player_id,
        COUNT(*) AS total_games
    FROM `juno-da-bootcamp-project-1.raw_data.matches_info` m
    JOIN `juno-da-bootcamp-project-1.raw_data.player_info` p
    ON m.player_id = p.player_id
    WHERE 
        m.day <= p.joined+30
    GROUP BY player_id),

    player_info_retention_stat AS (
    SELECT 
        DISTINCT p.player_id,
        p.joined,
        IF(MAX(day) OVER (PARTITION BY p.player_id) >= joined+30, 1, 0) AS retention_status,
    FROM `juno-da-bootcamp-project-1.raw_data.player_info` p
    LEFT JOIN `juno-da-bootcamp-project-1.raw_data.matches_info` m
    ON p.player_id = m.player_id)

SELECT
     records_per_streak.player_id,
     total_games,
     MAX(counter) longest_win_streak,
     retention_status,
 FROM
     records_per_streak 
 JOIN player_info_retention_stat AS pr
 ON records_per_streak.player_id = pr.player_id
 JOIN total_games_info AS tgi
 ON tgi.player_id = records_per_streak.player_id
 GROUP BY 
     records_per_streak.player_id,
     total_games,
     retention_status